imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: settings.yml }

framework:
    #esi:             ~
    # Composant de Traduction à activer si j'ai un site multilingue
    # le parametre fallbacks a l'interieur est la langue prise par défaut
    # dans le mécanisme de traduction
    # %locale% est un paramètre défini dans parameters.yml
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'StoreBackendBundle:Partial:form.html.twig'


# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        #Variables qui sont cherché dans parameters.yml
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        resolve_target_entities:
            Store\BackendBundle\Model\CategorySubjectInterface: Store\BackendBundle\Entity\Product
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                dql:
                    datetime_functions:
                        date_format: Store\BackendBundle\Doctrine\Extensions\DateFormat
                        date_format: Store\BackendBundle\Doctrine\Extensions\Month
                    numeric_functions:
                        round: Store\BackendBundle\Doctrine\Extensions\Round

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    encryption: ssl
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

#KnpPaginator configuration
knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # nom du param mis en URL ?page=1
        sort_field_name: sort          # param url pour trier
        sort_direction_name: direction # param url pour ASC/DESC
        distinct: true                 # Eviter les doublons dans notre liste (SQL DISTINCT)
    template:
        #Ici je peux choisir mes propres templates de pagination que j'inclurais dans mes vues
        pagination: StoreBackendBundle:Partial:sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

##FOS Elastica
fos_elastica:
    default_manager: orm
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        website:
            client: default
            index_name: website_qa
            types:
              supplier:
                 mappings:
                   name: {type: string }
                   description: {type: string }
              jeweler:
                 mappings:
                   username: {type: string }
                   email: {type: string }
                   title: {type: string }
                   description: {type: string }
              product:
                mappings:
                    title: { type: string }
                    summary: { type: string }
                    description: { type: string }
                    composition: { type: string }
                    price: { type: string }
                    taxe: { type: string }
                    jeweler:
                    #Definit une relation OneToMany ou ManyToMany
                      type: "nested"
                      properties:
                         username: {type: string }
                         email: {type: string }
                         title: {type: string }
                         description: {type: string }
                    category:
                      type: "nested"
                      properties:
                         title: {type: string }
                         description: {type: string }
                persistence:
                    driver: orm
                    model: Store\BackendBundle\Entity\Product
                    repository: Store\BackendBundle\Repository\ProductRepository
                    provider:
                        query_builder_method: activeProductQueryBuilder
                    finder: ~
                    listener: ~ # by default, listens to "insert", "update" and "delete"